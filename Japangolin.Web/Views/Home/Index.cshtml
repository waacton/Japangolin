<!-- TODO: a view model instead? -->
@using Wacton.Japangolin.Domain.JapanesePhrases
@model JapanesePhrase

@{
    ViewData["Title"] = Model.Kana;
}

<div>
    <h2 id="kana">@Model.Kana</h2>
    <hr/>
    <form asp-controller="Home" asp-action="Next" method="post" role="form">
        <div>
            <div>
                <button type="submit" class="btn btn-default">Japangolin?-asp</button>
                <button type="button" class="btn btn-default" onclick="updatePhrase()">Japangolin?-js</button>
            </div>
        </div>
    </form>
    <hr/>
    <div id="meanings">
       @{
           foreach (var meaning in Model.Meaning)
           {
               <p>@meaning</p>
           }
       }
    </div>
    
</div>

<script>
    function updatePhrase() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (xhttp.readyState == 4 && xhttp.status == 200) {
                var japanesePhrase = JSON.parse(xhttp.responseText);
                document.title = "Japangolin | " + japanesePhrase.Kana;
                document.getElementById("kana").innerHTML = japanesePhrase.Kana;

                var meaningsHtml = "";
                japanesePhrase.Meaning.forEach(function(item) {
                    meaningsHtml += "<p>" + item + "</p>";
                });
                document.getElementById("meanings").innerHTML = meaningsHtml;
            }
        };

        xhttp.open("GET", "api/random?t=" + Math.random(), false); // unique ID to avoid caching (IE...)
        xhttp.send();
    }
</script>