<UserControl x:Class="Wacton.Japangolin.Sentences.UI.Mains.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:mains="clr-namespace:Wacton.Japangolin.Sentences.UI.Mains"
        xmlns:golins="clr-namespace:Wacton.Japangolin.Sentences.Domain.Golins;assembly=Wacton.Japangolin.Sentences.Domain"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=mains:DesignTimeMainViewModel, IsDesignTimeCreatable=True}">

    <Grid FocusManager.FocusedElement="{Binding ElementName=UserInputTextBox}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <TextBlock Grid.Row="1" Text="{Binding PolitenessForm}" HorizontalAlignment="Left" VerticalAlignment="Center"
                   Margin="18,4,16,4" FontSize="18" FontWeight="Light" FontStyle="Italic" />

        <ListBox Grid.Row="2" Grid.Column="0" ItemsSource="{Binding GolinEnglish}" SelectedItem="{Binding SelectedGolin}" IsSynchronizedWithCurrentItem="True"
                  FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="16,4">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding EnglishConjugated}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource CustomForegroundListBoxItem}" TargetType="ListBoxItem" >
                    <Setter Property="Padding" Value="2" /> <!-- padding needed here for spacing between English words -->

                    <!-- 
                        overwriting ListBoxItem.IsEnabled according to whether there is Japanese translation for it 
                        then updating the text color according to the enabled state
                    
                        note: intellisense seems to think this binding is on the data context of this view (MainViewModel instead of the IGolin items)
                    -->
                    <Style.Triggers>
                        
                        <DataTrigger Binding="{Binding IsTranslatable}" Value="False" d:DataContext="{d:DesignInstance Type=golins:IGolin}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                        </Trigger>

                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <TextBox x:Name="UserInputTextBox" Grid.Row="3" Grid.Column="0" Text="{Binding UserInput, UpdateSourceTrigger=PropertyChanged}"
                 materialDesign:HintAssist.Hint="Japanese translation"
                 Margin="16,4,16,16" Padding="0" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" 
                 Style="{StaticResource MaterialDesignTextBox}" 
                 Visibility="{Binding IsCompleted, Converter={StaticResource BoolToHiddenConverter}}">
        </TextBox>

        <!-- margin calculated from snoop, to match up with the user input text box -->
        <ListBox Grid.Row="3" Grid.Column="0" ItemsSource="{Binding GolinJapanese}" SelectedItem="{Binding SelectedGolin}" IsSynchronizedWithCurrentItem="True"
                 FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="16,3,16,16"
                 Visibility="{Binding IsCompleted, Converter={StaticResource BoolToNotHiddenConverter}}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding KanjiConjugated}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource CustomForegroundListBoxItem}" TargetType="ListBoxItem" >
                    <Setter Property="Padding" Value="0" /> <!-- no padding needed here since there are no spaces between Japanese words -->

                    <!-- 
                        overwriting ListBoxItem.IsEnabled according to whether there is Japanese translation for it 
                        then updating the text color according to the enabled state
                    
                        note: intellisense seems to think this binding is on the data context of this view (MainViewModel instead of the IGolin items)
                    -->
                    <Style.Triggers>

                        <DataTrigger Binding="{Binding IsTranslatable}" Value="False" d:DataContext="{d:DesignInstance Type=golins:IGolin}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>

                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryAccentBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>
                        </Trigger>

                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,32,16,16" 
                    Visibility="{Binding IsCompleted, Converter={StaticResource BoolToHiddenConverter}}">
            <Button Width="100" Height="50" FontSize="18" HorizontalAlignment="Left" cal:Message.Attach="CheckSentence" Content="Check" Margin="0,0,8,0"
                    Style="{StaticResource MaterialDesignRaisedAccentButton}" IsEnabled="{Binding HasUserInput}"/>
            <Button Width="100" Height="50" FontSize="18" HorizontalAlignment="Left" cal:Message.Attach="GiveUpSentence" Content="Give up" Margin="8,0,8,0"
                    Style="{StaticResource MaterialDesignRaisedButton}" />
        </StackPanel>

        <StackPanel Grid.Row="4" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="16,32,16,16" 
                    Visibility="{Binding IsCompleted, Converter={StaticResource BoolToNotHiddenConverter}}">
            <Button Width="100" Height="50" FontSize="18" HorizontalAlignment="Left" cal:Message.Attach="NextSentence" Content="Next" Margin="0,0,8,0"
                    Style="{StaticResource MaterialDesignRaisedAccentButton}" />
        </StackPanel>

        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Top" Margin="16,16,16,0"
                    Visibility="{Binding IsCheatModeEnabled, Converter={StaticResource BoolToNotHiddenConverter}}">
            <Button cal:Message.Attach="CopyAnswerKana" HorizontalAlignment="Left"
                    ToolTip="Copy answer (kana)" Margin="0,0,8,0"
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}">
                <materialDesign:PackIcon Kind="ContentCopy" Height="24" Width="24" />
            </Button>

            <Button cal:Message.Attach="GoogleTranslateKana" HorizontalAlignment="Left" 
                    ToolTip="Google translate (kana)" Margin="8,0,8,0"
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}">
                <materialDesign:PackIcon Kind="GoogleTranslate" Height="24" Width="24" />
            </Button>

            <Button cal:Message.Attach="CopyAnswerKanji" HorizontalAlignment="Left"
                    ToolTip="Copy answer (kanji)" Margin="8,0,8,0"
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}">
                <materialDesign:PackIcon Kind="ContentCopy" Height="24" Width="24" />
            </Button>

            <Button cal:Message.Attach="GoogleTranslateKanji" HorizontalAlignment="Left" 
                    ToolTip="Google translate (kanji)" Margin="8,0,8,0"
                    Style="{StaticResource MaterialDesignFloatingActionLightButton}">
                <materialDesign:PackIcon Kind="GoogleTranslate" Height="24" Width="24" />
            </Button>

            <Button cal:Message.Attach="DisableCheatMode" HorizontalAlignment="Left"
                    ToolTip="Disable cheat mode" Margin="8,0,8,0"
                    Style="{StaticResource MaterialDesignFloatingActionDarkButton}">
                <materialDesign:PackIcon Kind="Undo" Height="24" Width="24" />
            </Button>
        </StackPanel>

        <materialDesign:Card Grid.Row="0" Grid.RowSpan="6" Grid.Column="1" VerticalAlignment="Stretch" Margin="16">
            <ContentControl Content="{Binding TranslationViewModel}">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type mains:NoTranslationViewModel}">
                        <mains:NoTranslationView />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type mains:TranslationViewModel}">
                        <mains:TranslationView />
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </materialDesign:Card>

        <materialDesign:Snackbar Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" 
                                 MessageQueue="{Binding SnackbarMessageQueue}" />
    </Grid>
</UserControl>
